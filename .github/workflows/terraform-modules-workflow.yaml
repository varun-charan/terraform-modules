name: consume-custom-action

on:
  push:
    branches:
      # Meant for NETxxyy-* tickets
      - feature/*
      # Meant for DEVOPS-* tickets
      - hotfix/*
  pull_request:
    types:
      - closed
      - synchronize
    branches:
      # Meant for running after PR merged on master
      - master
  # For manual trigger of job, if required. Avoids need to use dummy commits to initiate workflow.Applicable to master branch only since for it, source tag is picked from Git tags and not from Commit hash as is the case for dev branches.
  workflow_dispatch:

jobs:
  exec_command:
    runs-on: ubuntu-latest
    steps:
    - name: Test pyaction with exec devops cli command
      uses: varun-charan/pyaction@v0.4.0
      with:
        index_url_pip: ${{ secrets.INDEX_URL_PIP }}
        command: "exec"
        args: "python3 --version"
  
  non_exec_command:
    runs-on: ubuntu-latest
    outputs:
      stdout: ${{ steps.pyaction_non_exec_cmd.outputs.stdout }}
    steps:
    - name: Test pyaction with non-exec devops cli command
      id: pyaction_non_exec_cmd
      uses: varun-charan/pyaction@v0.4.0
      env:
        VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
        VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
      with:
        index_url_pip: ${{ secrets.INDEX_URL_PIP }}
        export_list: "VAULT_ADDR=${{ env.VAULT_ADDR }}, VAULT_TOKEN=${{ env.VAULT_TOKEN }}"
        command: "vault"
        subcommand: "get"
        args: "prd/devops/newreleases automation_api_key"

  test_vault_output:
    runs-on: ubuntu-latest
    needs: [ non_exec_command ]
    steps:
      - name: Test if pyaction vault command returned correct output
        shell: bash
        run: |
          echo "::add-mask::$API_KEY"
          curl --location --request GET 'https://api.newreleases.io/v1/projects' --header 'X-Key: ${{ env.API_KEY }}'
        env:
          API_KEY: ${{ needs.non_exec_command.outputs.stdout }}

  perform_security_scan:
    uses: varun-charan/reusable-workflows/.github/workflows/iac-security-scans.yaml@feature/add-security-scan-reusable-workflow
    with:
      generate_sarif: true
      severity: high
    secrets:
      snyk_auth_token: ${{ secrets.SNYK_AUTH_TOKEN }}